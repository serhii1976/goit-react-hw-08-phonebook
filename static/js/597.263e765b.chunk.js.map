{"version":3,"file":"static/js/597.263e765b.chunk.js","mappings":"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","sources":["components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","redux/contacts/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts/contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  /* width: 25vw; */\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 5px;\n  padding: 5px;\n  border: 2px solid grey;\n  border-radius: 5px;\n`;\nexport const ContactButton = styled.button`\n  width: 5vw;\n  padding: 2px;\n  border-radius: 4px;\n  color: #000000b8;\n  background-color: white;\n  border-color: #000000b8;\n  :hover {\n    background-color: grey;\n    color: white;\n    cursor: pointer;\n    box-shadow: 5px 4px 10px 4px rgba(73, 70, 70, 0.5);\n  }\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport {\n  ContactItem,\n  ContactButton,\n} from 'components/ContactListItem/ContactListItem.styled';\n\nexport const ContactListItem = ({ contact }) => {\n  const { id, name, number } = contact;\n\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ContactItem>\n      <span>\n        {name}: <a href=\"tel:{number}\">{number}</a>\n      </span>\n      <ContactButton type=\"button\" id={id} onClick={handleDelete}>\n        Delete\n      </ContactButton>\n    </ContactItem>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","export const selectContacts = state => state.contacts;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  padding: 0;\n`;\n","import React from 'react';\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { ContactsList } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  return (\n    <ContactsList>\n      {contacts.items\n        .filter(contact =>\n          contact.name.toLowerCase().includes(filter.value.toLowerCase())\n        )\n        .map(contact => (\n          <ContactListItem key={contact.id} contact={contact} />\n        ))}\n    </ContactsList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  border: 1px solid;\n  margin-bottom: 20px;\n  padding: 15px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 5px 5px 10px 5px rgba(73, 70, 70, 0.5);\n`;\nexport const InputTitle = styled.h3`\n  font-weight: normal;\n  margin-bottom: 5px;\n`;\nexport const InputField = styled.input`\n  margin-bottom: 15px;\n  padding: 4px;\n  width: 20vw;\n`;\nexport const ButtonAdd = styled.button`\n  width: 10vw;\n  padding: 4px;\n  color: #000000b8;\n  background-color: white;\n  border-color: #000000b8;\n  border-radius: 4px;\n  :hover {\n    background-color: grey;\n    color: white;\n    cursor: pointer;\n    box-shadow: 5px 4px 10px 4px rgba(73, 70, 70, 0.5);\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  Form,\n  InputTitle,\n  InputField,\n  ButtonAdd,\n} from 'components/ContactForm/ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    form.reset();\n\n    contacts.items?.map(contact => contact.name).includes(name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact({ name, number }));\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <InputTitle>Name</InputTitle>\n        <InputField\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <InputTitle>Number</InputTitle>\n        <InputField\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n      </Form>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FindText = styled.p`\n  margin-bottom: 5px;\n`;\nexport const InputFind = styled.input`\n  padding: 4px;\n  margin-bottom: 15px;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { FindText, InputFind } from 'components/Filter/Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <FindText>Find contacts by name</FindText>\n      <InputFind\n        type=\"text\"\n        name=\"name\"\n        onChange={handleFilterChange}\n        value={filter.value}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  width: 40vw;\n  margin: 20px auto;\n  padding: 30px 50px;\n  border: 2px solid;\n  background-color: #ffb80012;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\nexport const ContactTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nimport { Wraper, Title, ContactTitle } from './contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Wraper>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <ContactTitle>Contacts</ContactTitle>\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </Wraper>\n  );\n}\n"],"names":["ContactItem","styled","ContactButton","ContactListItem","contact","id","name","number","dispatch","useDispatch","href","type","onClick","deleteContact","selectContacts","state","contacts","selectFilter","filter","selectLoading","isLoading","ContactsList","ContactList","useSelector","items","toLowerCase","includes","value","map","Form","InputTitle","InputField","ButtonAdd","ContactForm","onSubmit","event","preventDefault","form","currentTarget","elements","reset","alert","addContact","pattern","title","required","FindText","InputFind","Filter","onChange","e","changeFilter","target","Wraper","Title","ContactTitle","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}